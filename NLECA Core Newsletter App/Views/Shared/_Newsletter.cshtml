@using NLECA_Core_Newsletter_App.Models.Newsletter;
@using NLECA_Core_Newsletter_App.Models.Event;

@model NewsletterModel;

@section Scripts {
    <script src="~/js/Article/NewsletterArticle.js"></script>
}

@if (Model.CreatedDate != DateTime.MinValue)
{
    <div class="container">
        <div class="row banner">
            <div class="col-sm-3">
                <img class="d-none d-md-block d-lg-block d-xl-block" src="~/Images/NewsletterImages/newsicon.jpg" />
            </div>
            <div class="col-sm-6 title">
                <h1>NLECA Newsletter</h1>
            </div>
            <div class="col-sm-3 date">
                <h2 class="newsletterDate">@DateTime.Parse(Model.DisplayDate).ToString("MMMM yyyy")</h2>
                @if (Model.IsEdit)
                {
                    <form action="/Newsletter/UpdateNewsletter" method="post">
                        <input type="hidden" name="newsletterId" value="@Model.NewsletterId" />
                        <input type="hidden" name="oldDisplayDate" value="@Model.DisplayDate" />

                        <div id="displayDateEditArea" style="display: none;">
                            <input type="hidden" name="newsletterId" value="@Model.NewsletterId" />
                            <input type="month" id="start" name="displayDate" min="2018-03" value="@Model.DisplayDate">
                            <button type="submit" id="displayDateSaveChanges">Save Changes</button>
                            <button type="button" id="displayDateEditCancel">Cancel</button>
                        </div>
                    </form>
                }
            </div>
        </div>
    </div>


    @if (Model.Articles.Count() == 0)
    {
        <h1>
            This newsletter does not have any articles yet...
            @if (Model.IsEdit)
            {
                <span class="btn btn-primary addArticleButton hoverPointer">Add One</span>
            }
        </h1>
    }
    else
    {
        <div id="TableOfContentsWrapper">
            <div id="TableOfContents">
                <div class="title">
                    <span>Inside this Issue</span>
                </div>
                <div id="sortableTableOfContents" class="articleSorter">
                    @foreach (ArticleModel article in Model.Articles)
                    {
                        <div>
                            <a href="@string.Format("#article{0}", article.ArticleId)">@article.ArticleTableOfContentsText</a>
                        </div>
                    }
                    @if (Model.IsEdit == false)
                    {
                        @if (Model.Events.Count() > 0)
                        {
                            <div>
                                <a href="#upcomingEvents">Upcoming Events</a>
                            </div>
                        }
                        <div>
                            <a href="#boardMemberContacts">Contacts</a>
                        </div>
                    }
                </div>
            </div>
            @if (Model.IsEdit)
            {
                <button class="changeArticleOrderButton" style="margin: 16px auto;">Change Article Order</button>
                <button class="saveArticleOrderButton" style="margin: 16px auto;">Save Article Order</button>
                <div>
                    <button type="button" class="btn btn-primary addArticleButton">Add Article</button>
                </div>

            }
        </div>

        @if (Model.IsEdit)
        {
            <form id="EditArticleForm" action="/Article/EditArticle" method="post">
                <input id="EditArticleFormInput" type="hidden" name="articleId" value="" />
            </form>
        }

        <div id="Articles">
            @foreach (ArticleModel article in Model.Articles)
            {
                <partial name="/Views/Article/Partials/_ArticleInNewsletter.cshtml" model="article" />


            }
        </div>
    }

    <a name="upcomingEvents"></a>

    @if (Model.Events.Count() == 0)
    {
        <div class="eventArea">
            <h2>There are no events for this Newsletter.</h2>
        </div>
    }

    @if (Model.IsEdit)
    {
        <div class="eventDateRangeEditArea">
            <div>
                <label>Start of Event Date Range</label>
                <input id="EventDateRangeStartInput" type="date" value="@Model.EventsStartDate.ToString("yyyy-MM-dd")" />

                <label>End of Event Date Range</label>
                <input id="EventDateRangeEndInput" type="date" value="@Model.EventsEndDate.ToString("yyyy-MM-dd")" />

                <button class="saveEventDateRangeButton"> Update Event Date Range</button>
            </div>
            <div id="ManageEventsRedirectArea">
                <div>
                    <span>OR</span>
                </div>
                <button id="ManageEventsButton">Manage Events</button>
            </div>
        </div>
    }

    @if (Model.Events.Count() != 0)
    {
        <div class="eventArea">
            <partial name="/Views/Event/Partials/_EventsInNewsletter.cshtml" model="Model.Events" />
        </div>
    }

    <a name="boardMemberContacts"></a>
    <div>
        <h2>Contacts:</h2>
        <span>THIS IS WHERE CONTACTS WILL GO</span>
    </div>
}
else
{
    <h2>There is no published newsletter to display.</h2>
}